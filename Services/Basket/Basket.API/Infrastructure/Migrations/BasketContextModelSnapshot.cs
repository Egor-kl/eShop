// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Basket.API.Infrastructure.Migrations
{
    [DbContext(typeof(BasketContext))]
    internal class BasketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Basket.API.Models.Basket", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .UseIdentityByDefaultColumn();

                b.Property<int>("CheckoutId")
                    .HasColumnType("integer");

                b.Property<int>("ProfileId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.ToTable("Baskets");
            });

            modelBuilder.Entity("Basket.API.Models.Checkout", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .UseIdentityByDefaultColumn();

                b.Property<int>("BasketId")
                    .HasColumnType("integer");

                b.Property<DateTime>("CardExpiration")
                    .HasColumnType("timestamp without time zone");

                b.Property<string>("CardHolderName")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("CardNumber")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("CardSecurityNumber")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("City")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Country")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("State")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Street")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("ZipCode")
                    .IsRequired()
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("BasketId")
                    .IsUnique();

                b.ToTable("Checkouts");
            });

            modelBuilder.Entity("Basket.API.Models.Checkout", b =>
            {
                b.HasOne("Basket.API.Models.Basket", "Basket")
                    .WithOne("Checkout")
                    .HasForeignKey("Basket.API.Models.Checkout", "BasketId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Basket");
            });

            modelBuilder.Entity("Basket.API.Models.Basket", b => { b.Navigation("Checkout"); });
#pragma warning restore 612, 618
        }
    }
}